import{j as t,N as A}from"./NotificationBar.CxUclX3e.js";import{r as u}from"./index.CVf8TyFT.js";const E=({technology:e,onIncrement:o,onDecrement:l,onDelete:s})=>{const n=()=>{o(e.id)},c=()=>{e.count>0&&l(e.id)},g=()=>{s(e.id)};return t.jsx("div",{className:`technology-item technology-${e.category}`,role:"listitem",children:t.jsxs("div",{className:"technology-content",children:[t.jsx("div",{className:"technology-header",children:t.jsxs("h3",{className:"technology-name",id:`tech-${e.id}`,children:[e.name," (",e.count,")"]})}),t.jsxs("div",{className:"technology-controls",children:[t.jsx("button",{type:"button",className:"btn btn-action btn-increment",onClick:n,"aria-label":`Add 1 to ${e.name} count`,"aria-describedby":`tech-${e.id}`,children:"Add 1"}),t.jsx("button",{type:"button",className:"btn btn-action btn-decrement",onClick:c,disabled:e.count<=1,"aria-label":`Decrease 1 from ${e.name} count`,"aria-describedby":`tech-${e.id}`,children:"Decrease 1"}),t.jsx("button",{type:"button",className:"btn btn-action btn-delete",onClick:g,"aria-label":`Remove ${e.name}`,"aria-describedby":`tech-${e.id}`,children:"Remove"})]})]})})},$=({technologies:e,onIncrement:o,onDecrement:l,onDelete:s,isLoading:n=!1,isInitialLoad:c=!1})=>{if(n||c)return t.jsxs("div",{className:"technology-list-loading",role:"status","aria-live":"polite",children:[t.jsx("div",{className:"loading-spinner","aria-hidden":"true"}),t.jsx("p",{children:c?"Loading from database...":"Loading technologies..."})]});if(e.length===0)return t.jsx("div",{className:"technology-list-empty",role:"status",children:t.jsx("p",{children:"No technologies added yet. Add your first technology to get started!"})});const g=e.filter(i=>i.category==="required").sort((i,h)=>h.count!==i.count?h.count-i.count:i.name.localeCompare(h.name)),y=e.filter(i=>i.category==="desirable").sort((i,h)=>h.count!==i.count?h.count-i.count:i.name.localeCompare(h.name)),j=g.reduce((i,h)=>i+h.count,0),x=y.reduce((i,h)=>i+h.count,0);return t.jsxs("div",{className:"technology-list-container",children:[t.jsxs("h2",{className:"technology-list-title",children:["ðŸ“Š Technology Stack (",e.length,")"]}),t.jsxs("div",{className:"technology-categories",children:[t.jsxs("div",{className:"technology-category required-category",children:[t.jsx("h3",{className:"category-title required-title",children:"Required Skills"}),t.jsx("div",{className:"technology-list",role:"list","aria-label":"List of required technologies",children:g.map(i=>t.jsx(E,{technology:i,onIncrement:o,onDecrement:l,onDelete:s},i.id))}),g.length===0&&t.jsx("div",{className:"category-empty",children:t.jsx("p",{children:"No required skills added yet"})})]}),t.jsxs("div",{className:"technology-category desirable-category",children:[t.jsx("h3",{className:"category-title desirable-title",children:"Desirable Skills"}),t.jsx("div",{className:"technology-list",role:"list","aria-label":"List of desirable technologies",children:y.map(i=>t.jsx(E,{technology:i,onIncrement:o,onDecrement:l,onDelete:s},i.id))}),y.length===0&&t.jsx("div",{className:"category-empty",children:t.jsx("p",{children:"No desirable skills added yet"})})]})]}),t.jsx("div",{className:"technology-list-summary",role:"status","aria-live":"polite",children:t.jsxs("p",{children:["Total: ",e.length," | Required: ",g.length," (",j,") | Desirable: ",y.length," (",x,")"]})})]})},q=({onAddTechnology:e,isLoading:o=!1})=>{const[l,s]=u.useState(""),[n,c]=u.useState("required"),[g,y]=u.useState(""),j=h=>{h.preventDefault();const T=l.trim();if(!T){y("Please enter a technology name");return}if(T.length<2){y("Technology name must be at least 2 characters long");return}if(T.length>50){y("Technology name must be less than 50 characters");return}y(""),e({name:T,category:n}),s(""),c("required")},x=h=>{s(h.target.value),g&&y("")},i=h=>{c(h.target.value)};return t.jsxs("form",{className:"add-technology-form",onSubmit:j,"aria-labelledby":"form-title",children:[t.jsx("h2",{id:"form-title",className:"form-title",children:"Add New Technology"}),t.jsxs("div",{className:"form-group",children:[t.jsx("label",{htmlFor:"technology-name",className:"form-label",children:"Technology Name"}),t.jsx("input",{type:"text",id:"technology-name",name:"technologyName",value:l,onChange:x,className:`form-input ${g?"error":""}`,placeholder:"e.g., React, TypeScript, Node.js","aria-describedby":g?"error-message":void 0,"aria-invalid":g?"true":"false",disabled:o,required:!0}),g&&t.jsx("div",{id:"error-message",className:"error-message",role:"alert",children:g})]}),t.jsx("div",{className:"form-group",children:t.jsxs("fieldset",{className:"category-fieldset",children:[t.jsx("legend",{className:"form-label",id:"category-legend",children:"Category"}),t.jsxs("div",{className:"category-options",role:"radiogroup","aria-labelledby":"category-legend",children:[t.jsxs("label",{className:"category-option",id:"required-option",children:[t.jsx("input",{type:"radio",name:"category",value:"required",checked:n==="required",onChange:i,disabled:o,"aria-describedby":"required-option"}),t.jsx("span",{className:"radio-custom required-radio","aria-hidden":"true"}),t.jsx("span",{className:"category-label",children:"Required"})]}),t.jsxs("label",{className:"category-option",id:"desirable-option",children:[t.jsx("input",{type:"radio",name:"category",value:"desirable",checked:n==="desirable",onChange:i,disabled:o,"aria-describedby":"desirable-option"}),t.jsx("span",{className:"radio-custom desirable-radio","aria-hidden":"true"}),t.jsx("span",{className:"category-label",children:"Desirable"})]})]})]})}),t.jsx("button",{type:"submit",className:"btn btn-primary",disabled:o||!l.trim(),"aria-describedby":"submit-help",style:{width:"100%"},children:o?"Adding...":"Add Technology"}),t.jsx("div",{id:"submit-help",className:"help-text",children:"Tab: Input â†’ Required â†’ Desirable â†’ Add Technology. Press Enter or click to add (starts with count 1)"})]})},k="cv-offers-technologies",w=()=>{if(typeof window>"u")return[];try{const e=sessionStorage.getItem(k);return e?JSON.parse(e).map(l=>({...l,createdAt:new Date(l.createdAt),updatedAt:new Date(l.updatedAt)})):[]}catch(e){return console.error("Error reading from session storage:",e),[]}},b=e=>{if(!(typeof window>"u"))try{sessionStorage.setItem(k,JSON.stringify(e))}catch(o){console.error("Error saving to session storage:",o)}},V=e=>{const o=w(),l=o.find(s=>s.name.toLowerCase()===e.name.toLowerCase());if(l){const s=o.map(n=>n.id===l.id?{...n,count:n.count+1,updatedAt:new Date}:n);return b(s),s}else{const s=[...o,e];return b(s),s}},S=(e,o)=>{const s=w().map(n=>n.id===e?{...n,count:o,updatedAt:new Date}:n);return b(s),s},I=e=>{const l=w().filter(s=>s.id!==e);return b(l),l},D=()=>{const e=w(),o=new Map;e.forEach(s=>{const n=s.name.toLowerCase();if(o.has(n)){const c=o.get(n);c.count+=s.count,c.updatedAt=new Date}else o.set(n,{...s})});const l=Array.from(o.values());return b(l),l},N="/api/technologies",f={async getTechnologies(){try{const e=await fetch(N);if(!e.ok)throw new Error("Failed to fetch technologies");return await e.json()}catch(e){return console.error("Error fetching technologies:",e),[]}},async createTechnology(e){try{const o=await fetch(N,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(!o.ok)throw new Error("Failed to create technology");return await o.json()}catch(o){return console.error("Error creating technology:",o),null}},async updateTechnology(e){try{const o=await fetch(`${N}/${e.id}`,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify({count:e.count})});if(!o.ok)throw new Error("Failed to update technology");return await o.json()}catch(o){return console.error("Error updating technology:",o),null}},async deleteTechnology(e){try{if(!(await fetch(`${N}/${e}`,{method:"DELETE"})).ok)throw new Error("Failed to delete technology");return!0}catch(o){return console.error("Error deleting technology:",o),!1}},async syncTechnologies(e){try{if(!(await fetch(`${N}/sync`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({technologies:e})})).ok)throw new Error("Failed to sync technologies");return!0}catch(o){return console.error("Error syncing technologies:",o),!1}}},R=()=>{const[e,o]=u.useState([]),[l,s]=u.useState(!1),[n,c]=u.useState({type:"info",message:"",isVisible:!1}),[g,y]=u.useState(!0);u.useEffect(()=>{(async()=>{s(!0);try{const r=await f.getTechnologies();if(r.length>0)o(r),b(r),console.log("Loaded technologies from database:",r.length);else{const a=D();o(a),console.log("Loaded and consolidated technologies from session storage:",a.length)}}catch(r){console.error("Error loading technologies:",r);const a=D();o(a),console.log("Fallback to session storage (consolidated):",a.length)}finally{s(!1),y(!1)}})()},[]),u.useEffect(()=>{const r=setInterval(async()=>{if(e.length!==0)try{const a=await f.syncTechnologies(e);c(a?{type:"success",message:"Data synced successfully",isVisible:!0}:{type:"error",message:"Sync failed - data saved locally",isVisible:!0})}catch(a){console.error("Sync failed:",a),c({type:"error",message:"Sync failed - data saved locally",isVisible:!0})}},3e4);return()=>clearInterval(r)},[e]);const j=u.useCallback(async d=>{s(!0);try{const r=e.find(a=>a.name.toLowerCase()===d.name.toLowerCase());if(r){const a=r.count+1,m=S(r.id,a);o(m);try{await f.updateTechnology({id:r.id,count:a}),c({type:"success",message:`"${d.name}" incremented to ${a}`,isVisible:!0})}catch(p){console.error("Error updating technology:",p),c({type:"warning",message:"Update failed - changes saved locally",isVisible:!0})}}else{const a={id:crypto.randomUUID(),name:d.name,count:1,category:d.category,createdAt:new Date,updatedAt:new Date},m=V(a);o(m);const p=await f.createTechnology(d);if(p){const C=m.map(v=>v.id===a.id?{...v,id:p.id}:v);o(C),b(C)}c({type:"success",message:`"${d.name}" added successfully`,isVisible:!0})}}catch(r){console.error("Error adding technology:",r),c({type:"error",message:"Failed to add technology - saved locally",isVisible:!0})}finally{s(!1)}},[e]),x=u.useCallback(async d=>{const r=e.find(p=>p.id===d);if(!r)return;const a=r.count+1,m=S(d,a);o(m);try{await f.updateTechnology({id:d,count:a}),c({type:"success",message:`"${r.name}" incremented to ${a}`,isVisible:!0})}catch(p){console.error("Error updating technology:",p),c({type:"warning",message:"Update failed - changes saved locally",isVisible:!0})}},[e]),i=u.useCallback(async d=>{const r=e.find(p=>p.id===d);if(!r||r.count<=0)return;const a=r.count-1,m=S(d,a);o(m);try{await f.updateTechnology({id:d,count:a}),c({type:"success",message:`"${r.name}" decremented to ${a}`,isVisible:!0})}catch(p){console.error("Error updating technology:",p),c({type:"warning",message:"Update failed - changes saved locally",isVisible:!0})}},[e]),h=u.useCallback(async d=>{const r=e.find(m=>m.id===d);if(!r)return;const a=I(d);o(a);try{await f.deleteTechnology(d),c({type:"success",message:`"${r.name}" deleted successfully`,isVisible:!0})}catch(m){console.error("Error deleting technology:",m),c({type:"warning",message:"Delete failed - removed locally",isVisible:!0})}},[e]),T=()=>{c(d=>({...d,isVisible:!1}))};return u.useEffect(()=>{if(n.isVisible){const d=setTimeout(()=>{c(r=>({...r,isVisible:!1}))},n.type==="success"?3e3:5e3);return()=>clearTimeout(d)}},[n.isVisible,n.type]),t.jsxs("div",{className:"technology-tracker",children:[t.jsx(A,{type:n.type,message:n.message,isVisible:n.isVisible,onClose:T}),t.jsxs("header",{className:"app-header",children:[t.jsx("h1",{className:"app-title",children:"Job Search Technology Tracker"}),t.jsx("p",{className:"app-description",children:"Track technologies from job postings and monitor their frequency"})]}),t.jsxs("main",{className:"app-main",children:[t.jsx(q,{onAddTechnology:j,isLoading:l}),t.jsx($,{technologies:e,onIncrement:x,onDecrement:i,onDelete:h,isLoading:l,isInitialLoad:g})]})]})};export{R as TechnologyTracker};
